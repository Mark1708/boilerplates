---
- name: Preconfig
  hosts: all
  become: true
  vars:
    created_username: "ADMIN_ULTRA_PRO"
    created_pass: "SUPER_SECURE_PASSWORD"
  tasks:
    - name: Installing Docker and Docker-compose
      block:
        - name: Installing Docker
          block:
            - name: Adding universe
              apt_repository:
                repo: "deb http://us.archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe"
                state: present

            - name: Installing additional packages
              apt:
                name:
                  - apt-transport-https
                  - ca-certificates
                  - curl
                  - gnupg
                  - lsb-release
                update-cache: true
                cache_valid_time: 86400

            - name: Adding a Docker Key
              apt_key:
                url: https://download.docker.com/linux/ubuntu/gpg
                state: present
                keyring: /usr/share/keyrings/docker-archive-keyring.gpg

            - name: Installing a stable repository
              apt_repository:
                repo: >
                  deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
                  https://download.docker.com/linux/ubuntu
                  {{ ansible_distribution_release }} stable
                state: present
                update-cache: true
                filename: docker

            - name: Installing Docker-ce
              apt:
                name: docker-ce
                update-cache: true

            - name: Checking that Docker is installed and rebooted
              service:
                name: docker
                state: restarted
                enabled: true

        - name: Installing Docker-compose
          block:
            - name: Getting the latest version Docker-compose
              uri:
                url: https://api.github.com/repos/docker/compose/releases/latest
                body_format: json
              register: page

            - name: Installing
              get_url:
                url: "https://github.com/docker/compose/releases/download/{{ page.json.tag_name }}/docker-compose-Linux-x86_64"
                dest: /usr/local/bin/docker-compose
                mode: 0755
    - name: Создание и настройка пользователя
      block:
        - name: Создание пользователя
          user: 
            name: "{{ created_username }}"
            password: "{{ created_pass | password_hash('sha512') }}"
            state: present
            shell: "/bin/bash"
            system: false
            groups: 
              - sudo
              - adm
              - docker
            create_home: true
            home: "/home/{{ created_username }}"
            comment: "Administrative user"
            generate_ssh_key: true

        - name: Setting up an SSH key connection
          ansible.posix.authorized_key:
            user: "{{ created_username }}"
            state: present
            key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

        - name: Turning off authentication for root
          lineinfile:
            path: /etc/ssh/sshd_config
            state: present
            regexp: '^#?PermitRootLogin'
            line: 'PermitRootLogin no'

        - name: Turning off password authentication
          lineinfile:
            path: /etc/ssh/sshd_config
            state: present
            regexp: '^#?PasswordAuthentication'
            line: 'PasswordAuthentication no'

    - name: Installing additional packages
      block:
        - name: Updating and downloading packages
          apt:
            pkg:
              - vim
              - ufw
              - zip
              - unzip
            state: latest
            update_cache: true

    - name: Configuring the firewall
      block:
        - name: UFW - Allow SSH connections
          community.general.ufw:
            rule: allow
            name: OpenSSH

        - name: UFW - Enable deny by default
          community.general.ufw:
            state: enabled
            default: deny